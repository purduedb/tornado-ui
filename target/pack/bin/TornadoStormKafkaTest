#!/bin/sh
#/*--------------------------------------------------------------------------
# *  Copyright 2012 Taro L. Saito
# *
# *  Licensed under the Apache License, Version 2.0 (the "License");
# *  you may not use this file except in compliance with the License.
# *  You may obtain a copy of the License at
# *
# *     http://www.apache.org/licenses/LICENSE-2.0
# *
# *  Unless required by applicable law or agreed to in writing, software
# *  distributed under the License is distributed on an "AS IS" BASIS,
# *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# *  See the License for the specific language governing permissions and
# *  limitations under the License.
# *--------------------------------------------------------------------------*/

if [ -z "$PROG_HOME" ] ; then
  ## resolve links - $0 may be a link to PROG_HOME
  PRG="$0"

  # need this for relative symlinks
  while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
      PRG="$link"
    else
      PRG="`dirname "$PRG"`/$link"
    fi
  done

  saveddir=`pwd`

  PROG_HOME=`dirname "$PRG"`/..

  # make it fully qualified
  PROG_HOME=`cd "$PROG_HOME" && pwd`

  cd "$saveddir"
fi


cygwin=false
mingw=false
darwin=false
case "`uname`" in
  CYGWIN*) cygwin=true
          ;;
  MINGW*) mingw=true
          ;;
  Darwin*) darwin=true
           if [ -z "$JAVA_VERSION" ] ; then
             JAVA_VERSION="CurrentJDK"
           else
            echo "Using Java version: $JAVA_VERSION" 1>&2
           fi
           if [ -z "$JAVA_HOME" ] ; then
             JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home
           fi
           JVM_OPT="$JVM_OPT -Xdock:name=${PROG_NAME} -Xdock:icon=$PROG_HOME/icon-mac.png -Dcom.apple.macos.useScreenMenuBar=true"
           JAVACMD="`which java`"
           ;;
esac

# Resolve JAVA_HOME from javac command path
if [ -z "$JAVA_HOME" ]; then
  javaExecutable="`which javac`"
  if [ -n "$javaExecutable" -a ! "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then
    # readlink(1) is not available as standard on Solaris 10.
    readLink=`which readlink`
    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then
      javaExecutable="`readlink -f \"$javaExecutable\"`"
      javaHome="`dirname \"$javaExecutable\"`"
      javaHome=`expr "$javaHome" : '\(.*\)/bin'`
      JAVA_HOME="$javaHome"
      export JAVA_HOME
    fi
  fi
fi


if [ -z "$JAVACMD" ] ; then
  if [ -n "$JAVA_HOME"  ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
      # IBM's JDK on AIX uses strange locations for the executables
      JAVACMD="$JAVA_HOME/jre/sh/java"
    else
      JAVACMD="$JAVA_HOME/bin/java"
    fi
  else
    JAVACMD="`which java`"
  fi
fi

if [ ! -x "$JAVACMD" ] ; then
  echo "Error: JAVA_HOME is not defined correctly."
  echo "  We cannot execute $JAVACMD"
  exit 1
fi

if [ -z "$JAVA_HOME" ] ; then
  echo "Warning: JAVA_HOME environment variable is not set."
fi

CLASSPATH_SUFFIX=""
# Path separator used in EXTRA_CLASSPATH
PSEP=":"

# For Cygwin, switch paths to Windows-mixed format before running java
if $cygwin; then
  [ -n "$PROG_HOME" ] &&
    PROG_HOME=`cygpath -am "$PROG_HOME"`
  [ -n "$JAVA_HOME" ] &&
    JAVA_HOME=`cygpath -am "$JAVA_HOME"`
  CLASSPATH_SUFFIX=";"
  PSEP=";"
fi

# For Migwn, ensure paths are in UNIX format before anything is touched
if $mingw ; then
  [ -n "$PROG_HOME" ] &&
    PROG_HOME="`(cd "$PROG_HOME"; pwd)`"
  [ -n "$JAVA_HOME" ] &&
    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"
  CLASSPATH_SUFFIX=";"
  PSEP=";"
fi


PROG_NAME=TornadoStormKafkaTest
PROG_VERSION=0.1

exec "$JAVACMD" \
     ${JVM_OPT} \
      \
     -cp "${PROG_HOME}/lib/tornadowebui_2.10-0.1.jar${PSEP}${PROG_HOME}/lib/ring-jetty-adapter-0.3.11.jar${PSEP}${PROG_HOME}/lib/datafactory-0.8.jar${PSEP}${PROG_HOME}/lib/metrics-core-2.2.0.jar${PSEP}${PROG_HOME}/lib/httpcore-4.2.4.jar${PSEP}${PROG_HOME}/lib/asm-4.0.jar${PSEP}${PROG_HOME}/lib/commons-httpclient-3.0.1.jar${PSEP}${PROG_HOME}/lib/snakeyaml-1.11.jar${PSEP}${PROG_HOME}/lib/servlet-api-2.5-20081211.jar${PSEP}${PROG_HOME}/lib/hsqldb-1.8.0.10.jar${PSEP}${PROG_HOME}/lib/tools.macro-0.1.0.jar${PSEP}${PROG_HOME}/lib/akka-remote_2.10-2.3.6.jar${PSEP}${PROG_HOME}/lib/ring-devel-0.3.11.jar${PSEP}${PROG_HOME}/lib/junit-4.5.jar${PSEP}${PROG_HOME}/lib/config-1.2.1.jar${PSEP}${PROG_HOME}/lib/jline-2.11.jar${PSEP}${PROG_HOME}/lib/chill-java-0.3.5.jar${PSEP}${PROG_HOME}/lib/spray-http_2.10-1.3.2.jar${PSEP}${PROG_HOME}/lib/jsr305-1.3.9.jar${PSEP}${PROG_HOME}/lib/log4j-1.2.14.jar${PSEP}${PROG_HOME}/lib/commons-exec-1.1.jar${PSEP}${PROG_HOME}/lib/clj-time-0.4.1.jar${PSEP}${PROG_HOME}/lib/ring-servlet-0.3.11.jar${PSEP}${PROG_HOME}/lib/kafka-clients-0.8.2.1.jar${PSEP}${PROG_HOME}/lib/slf4j-api-1.7.12.jar${PSEP}${PROG_HOME}/lib/commons-cli-1.2.jar${PSEP}${PROG_HOME}/lib/twitter4j-core-4.0.1.jar${PSEP}${PROG_HOME}/lib/netty-3.8.0.Final.jar${PSEP}${PROG_HOME}/lib/scala-library-2.10.4.jar${PSEP}${PROG_HOME}/lib/joda-time-2.10.1.jar${PSEP}${PROG_HOME}/lib/core.incubator-0.1.0.jar${PSEP}${PROG_HOME}/lib/tools.cli-0.2.4.jar${PSEP}${PROG_HOME}/lib/zookeeper-3.4.6.jar${PSEP}${PROG_HOME}/lib/spray-httpx_2.10-1.3.2.jar${PSEP}${PROG_HOME}/lib/carbonite-1.4.0.jar${PSEP}${PROG_HOME}/lib/jsp-api-2.1-6.1.14.jar${PSEP}${PROG_HOME}/lib/minlog-1.2.jar${PSEP}${PROG_HOME}/lib/spray-routing_2.10-1.3.2.jar${PSEP}${PROG_HOME}/lib/protobuf-java-2.5.0.jar${PSEP}${PROG_HOME}/lib/spray-util_2.10-1.3.2.jar${PSEP}${PROG_HOME}/lib/spray-can_2.10-1.3.2.jar${PSEP}${PROG_HOME}/lib/jgrapht-core-0.9.0.jar${PSEP}${PROG_HOME}/lib/servlet-api-2.5-6.1.14.jar${PSEP}${PROG_HOME}/lib/snappy-java-1.1.1.6.jar${PSEP}${PROG_HOME}/lib/oro-2.0.8.jar${PSEP}${PROG_HOME}/lib/ant-1.6.5.jar${PSEP}${PROG_HOME}/lib/mimepull-1.9.4.jar${PSEP}${PROG_HOME}/lib/httpclient-4.2.5.jar${PSEP}${PROG_HOME}/lib/commons-lang-2.5.jar${PSEP}${PROG_HOME}/lib/jetty-6.1.26.jar${PSEP}${PROG_HOME}/lib/parboiled-core-1.1.6.jar${PSEP}${PROG_HOME}/lib/jasper-runtime-5.5.12.jar${PSEP}${PROG_HOME}/lib/lz4-1.2.0.jar${PSEP}${PROG_HOME}/lib/zkclient-0.3.jar${PSEP}${PROG_HOME}/lib/slf4j-log4j12-1.6.1.jar${PSEP}${PROG_HOME}/lib/clout-1.0.1.jar${PSEP}${PROG_HOME}/lib/jets3t-0.7.1.jar${PSEP}${PROG_HOME}/lib/disruptor-2.10.1.jar${PSEP}${PROG_HOME}/lib/kafka_2.10-0.8.2.1.jar${PSEP}${PROG_HOME}/lib/guava-14.0.1.jar${PSEP}${PROG_HOME}/lib/commons-net-1.4.1.jar${PSEP}${PROG_HOME}/lib/hbc-twitter4j-2.2.0.jar${PSEP}${PROG_HOME}/lib/clj-stacktrace-0.2.2.jar${PSEP}${PROG_HOME}/lib/logback-core-1.0.13.jar${PSEP}${PROG_HOME}/lib/hiccup-0.3.6.jar${PSEP}${PROG_HOME}/lib/objenesis-1.2.jar${PSEP}${PROG_HOME}/lib/core-3.1.1.jar${PSEP}${PROG_HOME}/lib/hbc-core-2.2.0.jar${PSEP}${PROG_HOME}/lib/uncommons-maths-1.2.2a.jar${PSEP}${PROG_HOME}/lib/parboiled-scala_2.10-1.1.6.jar${PSEP}${PROG_HOME}/lib/hadoop-core-0.20.2.jar${PSEP}${PROG_HOME}/lib/commons-el-1.0.jar${PSEP}${PROG_HOME}/lib/kryo-2.21.jar${PSEP}${PROG_HOME}/lib/logback-classic-1.0.13.jar${PSEP}${PROG_HOME}/lib/xmlenc-0.52.jar${PSEP}${PROG_HOME}/lib/shapeless_2.10-1.2.4.jar${PSEP}${PROG_HOME}/lib/akka-slf4j_2.10-2.3.6.jar${PSEP}${PROG_HOME}/lib/jasper-compiler-5.5.12.jar${PSEP}${PROG_HOME}/lib/spray-json_2.10-1.3.0.jar${PSEP}${PROG_HOME}/lib/twitter4j-stream-4.0.1.jar${PSEP}${PROG_HOME}/lib/ring-core-1.1.5.jar${PSEP}${PROG_HOME}/lib/joauth-6.0.2.jar${PSEP}${PROG_HOME}/lib/spray-io_2.10-1.3.2.jar${PSEP}${PROG_HOME}/lib/clojure-1.5.1.jar${PSEP}${PROG_HOME}/lib/compojure-1.1.3.jar${PSEP}${PROG_HOME}/lib/jetty-util-6.1.26.jar${PSEP}${PROG_HOME}/lib/math.numeric-tower-0.0.1.jar${PSEP}${PROG_HOME}/lib/jsp-2.1-6.1.14.jar${PSEP}${PROG_HOME}/lib/storm-core-0.9.5.jar${PSEP}${PROG_HOME}/lib/kfs-0.3.jar${PSEP}${PROG_HOME}/lib/jopt-simple-3.2.jar${PSEP}${PROG_HOME}/lib/akka-actor_2.10-2.3.6.jar${PSEP}${PROG_HOME}/lib/servlet-api-2.5.jar${PSEP}${PROG_HOME}/lib/joda-convert-2.2.0.jar${PSEP}${PROG_HOME}/lib/commons-codec-1.6.jar${PSEP}${PROG_HOME}/lib/json-simple-1.1.jar${PSEP}${PROG_HOME}/lib/tools.logging-0.2.3.jar${PSEP}${PROG_HOME}/lib/commons-io-2.4.jar${PSEP}${PROG_HOME}/lib/commons-logging-1.1.3.jar${PSEP}${PROG_HOME}/lib/commons-fileupload-1.2.1.jar${PSEP}${PROG_HOME}/lib/aqwa.jar${PSEP}${CLASSPATH_SUFFIX}" \
     -Dprog.home="${PROG_HOME}" \
     -Dprog.version="${PROG_VERSION}" \
     examples.TornadoStormKafkaTest "$@"
