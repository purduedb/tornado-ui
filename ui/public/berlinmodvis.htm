<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <style type="text/css">
      html { height: 100% }
      body { height: 100%; margin: 0; padding: 0 }
      #map-canvas { height: 100% }
    </style>
    
    <link href="css/jquery-ui.min.css" rel="stylesheet">
    <script type="text/javascript" src="js/jquery.js"></script>
     <script type="text/javascript" src="js/jquery.json.min.js"></script>
    <script type="text/javascript" src="js/jquery-ui.min.js"></script>
    <script type="text/javascript" src="js/portal.min.js"></script>

    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDUTsGEgrknzPi1xdS1NxH5quGucPmpZoA&v=3.exp&libraries=drawing"></script>

    <script type="text/javascript">
    
   	var gmap = null;

    var beforeColor = '#CF5656';
    var afterColor = '#9BC150';

    var polylines = [];

    var drawingContext = {
      rectangles:[],
      rectangleMaxCount:1
    };
    var drawingManager = null;

    var beforeRectOptions = {
      clickable: true,
      draggable:true,
      editable:true,
      fillColor: beforeColor, 
      fillOpacity: 0.5,
      strokeWeight: 5
    };

    // place holder object for the request
    var request = {
        mbr:null
      };

    var drawingOptions = {
      drawingMode: google.maps.drawing.OverlayType.RECTANGLE,
      drawingControl: true,
      drawingControlOptions: {
        position: google.maps.ControlPosition.TOP_CENTER,
        drawingModes: [
          // google.maps.drawing.OverlayType.CIRCLE,
          // google.maps.drawing.OverlayType.POLYGON,
          google.maps.drawing.OverlayType.RECTANGLE
        ]
      },
      rectangleOptions:beforeRectOptions
    };


var es; // event stream handle

    
      function initialize() {

        var mapOptions = {
        		//24.507052, 45.371521

        		// berlin
        		// 52.520190250694526&west=13.405380249023438&south=52.51914570999911&east=13.407440185546875 
          center: new google.maps.LatLng(52.52019025069452, 13.405380249023438),
          zoom: 10
        };
        var map = new google.maps.Map(document.getElementById("map-canvas"),
            mapOptions);
        gmap = map;

        drawingOptions.rectangleOptions = beforeRectOptions;

      drawingManager = new google.maps.drawing.DrawingManager(drawingOptions);
      drawingManager.addListener("rectanglecomplete",function(e){
        // console.log("a rectangle is completed");
        // console.log(e.getBounds());
        // console.log("current count = "+drawingContext.rectangles.length);
        if ((drawingContext.rectangles.length) == drawingContext.rectangleMaxCount){
          // console.log("max count has reached which is "+drawingContext.rectangleMaxCount);
          e.setMap(null);
        }
        else{
          drawingContext.rectangles.push(e);  
          e.addListener("bounds_changed",function(){
            updateMBR(this);  
          });
          updateMBR(e);  
        }

      });

      // drawingManager.setMap(map);

      }

      function createMBR(rect){
        return {
          north:rect.getBounds().getNorthEast().lat(),
          east:rect.getBounds().getNorthEast().lng(),
          south:rect.getBounds().getSouthWest().lat(),
          west:rect.getBounds().getSouthWest().lng()
        };
      }

      // This function creates the MBR (spatial predicate) for the query
      function updateMBR(rect){
        request.mbr = {
          north:rect.getBounds().getNorthEast().lat(),
          west:rect.getBounds().getSouthWest().lng(),
          south:rect.getBounds().getSouthWest().lat(),
          east:rect.getBounds().getNorthEast().lng()
        };        
        console.log($.param(request.mbr));
      }

      var queries = [];
      var inputpoints =[];
      var trips =[];
      var streets = [];

      var eventsources = [];

      $(document).ready(function() {
        // Intialize google maps
    	  google.maps.event.addDomListener(window, 'load', initialize);

        
    	$("#openStream").click(function(event) {    		

		es = new EventSource("/berlinmod-query-stream");
		 
    	 es.onmessage = function(e) {
    	 	var sse = $.parseJSON(e.data);
    	 	console.log("received an sse : "+$.toJSON(e.data));  
    	 	// "{\"west\":13.552150758472129,\"north\":52.562162292366374,\"qtype\":\"rect\",\"south\":52.54686656313309,\"type\":\"query\",\"east\":13.526257770775386} "  

    	 	if (sse.type === "query" && sse.qtype === "rect"){
			    var rectangle = new google.maps.Rectangle({
				    strokeColor: '#FF0000',
				    strokeOpacity: 0.8,
				    strokeWeight: 2,
				    fillColor: '#FF0000',
				    fillOpacity: 0.35,
				    map: gmap,
				    bounds: new google.maps.LatLngBounds(
				      new google.maps.LatLng(sse.north, sse.east),
				      new google.maps.LatLng(sse.south, sse.west))
				  });
    	 		markers.push(rectangle);    	 		
    	 	}	 	
		 };
		 eventsources.push(es);


		 es = new EventSource("/berlinmod-trip-stream");
		 
    	 es.onmessage = function(e) {
    	 	var sse = $.parseJSON(e.data);
    	 	console.log("received an sse : "+$.toJSON(e.data));  
//"{\"type\":\"trip\",\"moid\":1,\"tstart\":{\"ts\":1180238400000,\"lat\":52.41721101883486,\"lng\":13.43593269907358},\"tend\":{\"ts\":1180355807846,\"lat\":52.41721101883486,\"lng\":13.43593269907358}} "
    	 	if (sse.type === "trip" ){

				var myLatlng = new google.maps.LatLng(sse.tstart.lat, sse.tstart.lng);
        var image = {
          url: 'images/car2-24.png',
          // This marker is 20 pixels wide by 32 pixels tall.
          size: new google.maps.Size(24, 24),
          // // The origin for this image is 0,0.
          // origin: new google.maps.Point(0,0),
          // // The anchor for this image is the base of the flagpole at 0,32.
          // anchor: new google.maps.Point(0, 32)
        };
        if (markers.length == (sse.moid-1)){
          // first marker
          var marker = new google.maps.Marker({
            position: myLatlng,
            map: gmap,
            icon: image,
            title:"MOID = "+sse.moid
        });
          markers.push(marker);    
        }
        else{

          var m = markers[sse.moid - 1];
          m.position = myLatlng;
          m.setMap(gmap)
          
        }
          
    
    	 // 		var plinePoints = [];
    	 // 		plinePoints.push(new google.maps.LatLng(sse.tstart.lat, sse.tstart.lng));	
    	 // 		plinePoints.push(new google.maps.LatLng(sse.tend.lat, sse.tend.lng));

			   //  var pline = new google.maps.Polyline({
				  //   path: plinePoints,
				  //   geodesic: true,
				  //   strokeColor: '#0000FF',
				  //   strokeOpacity: 1.0,
				  //   strokeWeight: 2
				  // });
    	 // 		trips.push(pline);    	 		
    	 // 		pline.setMap(gmap);

    	 	}
        else if (sse.type === "street"){
          
           var plinePoints = [];
           plinePoints.push(new google.maps.LatLng(sse.tstart.lat, sse.tstart.lng)); 
           plinePoints.push(new google.maps.LatLng(sse.tend.lat, sse.tend.lng));

          var pline = new google.maps.Polyline({
            path: plinePoints,
            geodesic: true,
            strokeColor: '#0000FF',
            strokeOpacity: 1.0,
            strokeWeight: 2
          });
           streets.push(pline);          
           pline.setMap(gmap);

        }
        else if (sse.type === "updates"){
          for (var i = 0; i < sse.updates.length; i++) {
            var u = sse.updates[i];
            var myLatlng = new google.maps.LatLng(u.lat, u.lng);
            var image = {
              url: 'images/car2-24.png',
              // This marker is 20 pixels wide by 32 pixels tall.
              size: new google.maps.Size(24, 24),
              // // The origin for this image is 0,0.
              // origin: new google.maps.Point(0,0),
              // // The anchor for this image is the base of the flagpole at 0,32.
              // anchor: new google.maps.Point(0, 32)
            };

            if (markers[u.moid] == undefined){
              var marker = new google.maps.Marker({
              position: myLatlng,
              map: gmap,
              icon: image,
              title:"MOID = "+u.moid
              });
              markers[u.moid] = marker;
            }
            else{
              markers[u.moid].position = myLatlng;
              markers[u.moid].setMap(gmap);
            }

          };
        }
		 };

		 eventsources.push(es);

    	});

    	$("#closeStream").click(function(event) {
    		for (var i = eventsources.length - 1; i >= 0; i--) {
    			var es = eventsources.pop();
    			es.close();
    		};
    		//es.close();
    	});

        $("#clearDrawings").click(function(event) {
          clearMap();
        });

   		});

      var markers = [];

      function clearMap(){
        while (drawingContext.rectangles.length > 0){
          drawingContext.rectangles.pop().setMap(null);
        }
        drawingOptions.rectangleOptions = beforeRectOptions;
        drawingManager.setOptions(drawingOptions);
        drawingManager.setMap(gmap);

        // remove all polylines

        while (polylines.length > 0){
          polylines.pop().setMap(null);
        }


      }
      
    </script>
  </head>
  <body>
  	<div style="position:absolute;width:200px;height:100%;z-index:5; overflow:scroll;">
  	
    <div><button id="clearDrawings">Clear Drawings</button></div>

    <div><button id="openStream">Open Stream</button></div>

    <div><button id="closeStream">Close Stream</button></div>
  	
  	
  	<div style="position:relative" id="clist"></div>
	</div>
    <div id="map-canvas" style="poistion:absolute;left:201px;z-index:0"></div>
  </body>
</html>
